// Use the Liberty Gradle plugin to start and stop the test server prior to running our functional tests

// Note the build.gradle file has already added the Liberty Gradle plugin to the classpath for us.
apply plugin: 'liberty'

// Add a source set for doing functional tests against a running Liberty
sourceSets {
    fvtBuild
}
dependencies {
    fvtBuildCompile configurations.testCompile
    fvtBuildRuntime configurations.testRuntime
}

// Create a task to actually run the tests
task fvtBuild(type: Test, dependsOn: jar) {
    group 'Verification'
    description 'Runs the functional verification tests by using Gradle to start and stop the liberty server prior to running all the tests.'
    testClassesDir = sourceSets.fvtBuild.output.classesDir
    classpath = sourceSets.fvtBuild.runtimeClasspath
    dependsOn publishWar, libertyStart
    finalizedBy libertyStop
    reports.html.destination = file("$buildDir/reports/fvtBuild")
    reports.junitXml.destination = file("$buildDir/test-results/fvtBuild")
}

check.dependsOn fvtBuild

// Set the ordering so we only start the server after the WAR has been published
libertyStart.mustRunAfter publishWar

// Tell the liberty plugin about the server to use in the test
liberty {
    wlpDir = "${libertyRoot}"
    serverName = 'functionalTestSample'
    userDir = '../functionaltest-wlpcfg'
    clean = true
}